<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dejay.framework.mapper.board.ApproveMapper">

    <sql id = "boardColumn">
        ${alias}BOARD_SEQ, ${alias}BOARD_CD
        , ${alias}TITLE, ${alias}CONTENTS
        , ${alias}HITS, ${alias}DEL_YN
        , ${alias}REG_DT, ${alias}REG_ID
        , ${alias}LAST_DT, ${alias}LAST_ID
    </sql>

    <sql id = "boardReplyColumn">
          ${alias}RIPPLE_SEQ, ${alias}BOARD_SEQ
        , ${alias}RIPPLE_NO, ${alias}CONTENTS
        , ${alias}REG_DT, ${alias}REG_ID
    </sql>

    <sql id = "whereClause">
        AND ${alias}DEL_YN = 'N'
        <if test="boardSeq != null and boardSeq != '' ">
            AND ${alias}BOARD_SEQ = #{boardSeq}
        </if>
        <if test="boardCd != null and boardCd != '' ">
            AND ${alias}BOARD_CD = #{boardCd}
        </if>
        <if test="(startDt != null and startDt != '') and (endDt != null and endDt != '')">
            <if test="searchDateType == 'REG_DT'">
                AND ${alias}REG_DT BETWEEN DATE(#{startDt}) AND DATE(#{endDt})+1
            </if>
            <if test="searchDateType == 'COMPLETED'">
                AND ${alias}LAST_DT BETWEEN DATE(#{startDt}) AND DATE(#{endDt})+1
            </if>
        </if>
        <if test="searchWord1 != null and searchWord1 != ''">
            <choose>
                <when test="searchKeywordType == 'TITLE'">
                    AND LOWER(${alias}TITLE) LIKE LOWER(CONCAT('%', #{searchWord1}, '%'))
                </when>
                <when test="searchKeywordType == 'REG_ID'">
                    AND LOWER(${alias}REG_ID) LIKE LOWER(CONCAT('%', #{searchWord1}, '%'))
                </when>
                <otherwise>
                    AND (LOWER(${alias}TITLE) LIKE LOWER(CONCAT('%', #{searchWord1}, '%')) OR LOWER(${alias}REG_ID) LIKE LOWER(CONCAT('%', #{searchWord1}, '%')))
                </otherwise>
            </choose>
        </if>
    </sql>

    <sql id = "whereClauseSeq">
            AND ${alias}BOARD_SEQ = #{boardSeq}
    </sql>

    <sql id="orderClause">
        ORDER BY
        <choose>
            <when test="orderBy eq 'bs'">${alias}BOARD_SEQ</when>
            <when test="orderBy eq 'ti' ">${alias}TITLE</when>
            <when test="orderBy eq 'ct' ">${alias}CONTENTS</when>
            <otherwise>${alias}REG_DT</otherwise>
        </choose>
        <choose>
            <when test="descAsc != null and descAsc.equalsIgnoreCase('ASC') ">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
    </sql>


    <!-- 조회 [[ -->

    <select id="findAllTotalCount" resultType="int">
        /*게시판 목록 갯수 조회 - ApproveMapper.findAllTotalCount */
            SELECT COUNT(1)
              FROM BOARD_PUBLIC BP
        INNER JOIN INFO_APPROVE IA
                ON BP.BOARD_SEQ = IA.BOARD_SEQ
        <where>
               AND BP.BOARD_CD = #{boardCd}
               <include refid="whereClause"><property name="alias" value="BP."/></include>
           <if test="approveState != null and approveState != '' and approveState != 'ALL'">
               AND IA.APPROVE_STATE = #{approveState}
           </if>
        </where>
    </select>

    <select id="findAll" resultType="BoardPublicVO">
        /*게시판 목록 조회 - BoarderMapper.findAll */
            SELECT <include refid="boardColumn"><property name="alias" value="BP."/></include>
                 , IA.APPROVE_STATE
                 , ROW_NUMBER() OVER(ORDER BY BP.REG_DT DESC) AS ROW_NUM
              FROM BOARD_PUBLIC BP
        INNER JOIN INFO_APPROVE IA
                ON BP.BOARD_SEQ = IA.BOARD_SEQ
        <where>
               AND BP.BOARD_CD = 'MENU0201'
               <include refid="whereClause"><property name="alias" value="BP."/></include>
           <if test="approveState != null and approveState != '' and approveState != 'ALL'">
               AND IA.APPROVE_STATE = #{approveState}
           </if>
        </where>
        GROUP BY BOARD_SEQ
        <include refid="orderClause"><property name="alias" value="BP."/></include>
        <if test="paging.displayRow > 0">
            LIMIT #{paging.displayRow} OFFSET #{paging.offset}
        </if>
    </select>

    <select id="findById" resultType="BoardPublicVO" parameterType="BoardSearchVO">
        /*게시판 단 건 조회 - BoarderMapper.findByBoardSeq */
          SELECT <include refid="boardColumn"><property name="alias" value="BP."/></include>
            FROM BOARD_PUBLIC BP
        <where>
            <include refid="whereClauseSeq"><property name="alias" value="BP."/></include>
        </where>
        GROUP BY BOARD_SEQ
    </select>

    <select id="findReplyBySeq">
        /*게시판 댓글 조회 - BoarderMapper.findReplyBySeq */
          SELECT <include refid="boardReplyColumn"><property name="alias" value="BP."/></include>
            FROM BOARD_RIPPLE BP
           WHERE BOARD_SEQ = #{boardSeq}
             AND DEL_YN = 'N'
        ORDER BY RIPPLE_NO DESC
    </select>
    <!-- 조회 ]] -->


    <!-- 저장/수정/삭제 [[ -->

    <insert id="insert" useGeneratedKeys="true">
        /* 게시판 저장 - BoardMapper.insert */
        INSERT INTO BOARD
        (
            BOARD_CODE, TITLE,
            CONTENTS, FIX_YN,
            DISPLAY_YN, USE_YN
        )
        VALUES
        (
            #{boardCode}, #{title},
           #{contents}, #{fixYn},
            #{displayYn}, #{useYn}
        )
        <selectKey keyProperty="logId1" resultType="String">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="update">
        /* 게시판 수정 - BoardMapper.update */
        UPDATE BOARD BD
        <set>
            <if test="title != null and title != '' ">BD.TITLE = #{title},</if>
            <if test="contents != null and contents != '' ">BD.CONTENTS = #{contents},</if>
            <if test="fixYn != null and fixYn != '' ">BD.FIX_YN = #{fixYn},</if>
            <if test="displayYn != null and displayYn != '' ">DISPLAY_YN = #{displayYn},</if>
            <if test="useYn != null and useYn != '' ">BD.USE_YN = #{useYn}</if>
        </set>
        <where>
            <include refid="whereClauseSeq"><property name="alias" value="BD."/></include>
        </where>

    </update>

    <delete id="delete">
        /* 게시판 단 건 삭제 - BoardMapper.delete */
        DELETE FROM BOARD
        WHERE
            BOARD_SEQ = #{boardSeq}
    </delete>


    <!-- BOARD_PUBLIC -->
    <update id="deleteList">
        /* 게시판 다 건 삭제 - BoardMapper.deleteList */
        UPDATE BOARD_PUBLIC
           SET DEL_YN = 'Y', LAST_DT = NOW(), LAST_ID = #{lastId}
         WHERE BOARD_SEQ IN
        <foreach collection="boardSeqList" item="seq" index="idx" separator="," open="(" close=")">
            #{seq}
        </foreach>
    </update>

    <update id="updateBoard">
        /* 게시판 수정 - BoardMapper.updateBoard */
        UPDATE BOARD_PUBLIC
           SET TITLE = #{title}, CONTENTS = #{contents}, LAST_DT = NOW(), LAST_ID = #{lastId}
         WHERE BOARD_SEQ = #{boardSeq}
    </update>

    <insert id="registrationBoard">
        /* 게시판 등록 - BoardMapper.registrationBoard */
        INSERT INTO BOARD_PUBLIC (BOARD_CD, TITLE, CONTENTS, REG_DT, REG_ID)
             VALUES (#{boardCd}, #{title}, #{contents}, NOW(), #{regId})
        <selectKey resultType="Long" keyProperty="boardSeq" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="increaseHits">
        /* 게시판 조회수 증가 - BoardMapper.increaseHits */
        UPDATE BOARD_PUBLIC
           SET HITS = HITS + 1
         WHERE BOARD_SEQ = #{boardSeq}
    </update>

    <update id="removeReplyBySeq">
        /* 게시판 댓글 삭제 - BoardMapper.removeReplyBySeq */
        UPDATE BOARD_RIPPLE
           SET DEL_YN = 'Y'
         WHERE RIPPLE_SEQ = #{rippleSeq}
           AND BOARD_SEQ = #{boardSeq}
    </update>

    <!-- 저장/수정/삭제 [[ -->
</mapper>