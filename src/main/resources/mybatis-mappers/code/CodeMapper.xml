<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dejay.framework.mapper.code.CodeMapper">

    <!--
        * For short
        1. cd : CODE
        2. cn : CODE_NAME
        3. co : CODE_ORD
        4. r1 : REMARK1
        5. r2 : REMARK2
    -->

    <!-- 공통 [[ -->

    <!-- column [[ -->

    <sql id="codeColumn">
        ${alias}CODE, ${alias}CODE_NAME
        , ${alias}REMARK1, ${alias}VALUE1, ${alias}REMARK2, ${alias}VALUE2
        , ${alias}CODE_ORD, ${alias}USE_YN
    </sql>

    <!-- column ]] -->


    <!-- whereClause [[ -->
    <sql id="whereClause">

        <if test="code != null and code != '' ">
            AND CODE = #{code}
        </if>

        <if test="useYn != null and useYn != '' ">
            AND USE_YN = #{useYn}
        </if>

        <if test="parentCode != null and parentCode != '' ">
            <choose>
                <when test="parentCode == '0000'">
                    AND CODE LIKE CONCAT('%', '0000')
                </when>
                <otherwise>
                    AND CODE LIKE CONCAT(#{parentCode}, '%')
                </otherwise>
            </choose>
        </if>

        <if test="searchWord1 != null and searchWord1 != '' ">
            <choose>
                <when test="type1 eq 'cn'">AND CODE_NAME LIKE CONCAT('%', #{searchWord1}, '%')</when>
                <when test="type1 eq 'r1'">AND REMARK1 LIKE CONCAT('%', #{searchWord1}, '%')</when>
                <when test="type1 == null or type1 eq '' ">AND ( CODE_NAME LIKE CONCAT('%', #{searchWord1}, '%') OR REMARK1 LIKE CONCAT('%', #{searchWord1}, '%') )</when>
                <otherwise></otherwise>
            </choose>
        </if>

    </sql>
    <!-- whereClause ]] -->


    <!-- orderClause [[ -->
    <sql id="orderClause">
        ORDER BY
        <choose>
            <when test="orderBy eq 'cd' ">CODE</when>
            <when test="orderBy eq 'cn' ">CODE_NAME</when>
            <when test="orderBy eq 'co' ">CODE_ORD</when>
            <when test="orderBy eq 'r1' ">REMARK1</when>
            <when test="orderBy eq 'r2' ">REMARK2</when>
            <otherwise>CODE</otherwise>
        </choose>
        <choose>
            <when test="descAsc != null and descAsc.equalsIgnoreCase('ASC') ">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
    </sql>
    <!-- orderClause ]] -->
    <!-- 공통 ]] -->





    <!-- 조회 [[ -->


    <select id="listBySearch" resultType="CodeVO" parameterType="SearchVO">
        /* 코드 목록 조회 - CodeMapper.listBySearch */
        SELECT
            <include refid="codeColumn"><property name="alias" value="CD."/></include>
        FROM CODE CD
        <where>
            <include refid="whereClause"></include>
        </where>

        <include refid="orderClause"></include>
    </select>

    <select id="rowBySearch" resultType="CodeVO" parameterType="SearchVO">
        /* 코드 단 건 조회 - CodeMapper.rowBySearch */
        SELECT
            <include refid="codeColumn"><property name="alias" value="CD."/></include>
        FROM CODE CD
        <where>
            <include refid="whereClause"></include>
        </where>
    </select>

    <!-- 조회 ]] -->





    <!-- 저장/수정/삭제 [[ -->

    <insert id="insert">
        /* 코드 저장 - CodeMapper.insert */
        INSERT INTO CODE
        (
            CODE, CODE_NAME
            , REMARK1, VALUE1, REMARK2, VALUE2
            , CODE_ORD, USE_YN
        )
        VALUES
        (
            #{code}, #{codeName}
            , #{remark1}, #{value1}, #{remark2}, #{value2}
            , #{codeOrd}, #{useYn}
        )
    </insert>



    <update id="update">
        /* 코드 수정 - CodeMapper.update */
        UPDATE CODE
        <set>
            <if test="codeName != null and codeName != ''">CODE_NAME = #{codeName},</if>
            <if test="remark1 != null and remark1 != ''">REMARK1 = #{remark1},</if>
            <if test="value1 != null ">VALUE1 = #{value1},</if>
            <if test="remark2 != null and remark2 != ''">REMARK2 = #{remark2},</if>
            <if test="value2 != null">VALUE2 = #{value2},</if>
            <if test="useYn != null and useYn != ''">USE_YN = #{useYn},</if>
        </set>
        WHERE CODE = #{code}
    </update>

    <update id="updateCodeOrder">
        /* 코드 순서 UPDATE - CodeMapper.updateCodeOrder */
        UPDATE CODE
            SET CODE_ORD = #{codeOrd}
        WHERE CODE = #{code}
    </update>



    <!-- 저장/수정/삭제 ]] -->


    <!-- 페이징 샘플 (삭제 예정) [[ -->
    <select id="pagingBySearch" resultType="CodeVO" parameterType="SearchVO">
        /* 코드 페이징 조회 - CodeMapper.pagingBySearch */
        SELECT
        <include refid="codeColumn"><property name="alias" value="CD."/></include>
        FROM CODE CD
        <where>
            <include refid="whereClause"></include>
        </where>

        <include refid="orderClause"></include>

        <include refid="mapper.paging.pagingQuery"></include>

    </select>

    <select id="pagingCountBySearch" resultType="Integer" parameterType="SearchVO">
        /* 코드 페이징 조회 - CodeMapper.pagingBySearch */
        SELECT COUNT(*)
        FROM CODE CD
        <where>
            <include refid="whereClause"></include>
        </where>
    </select>
    <!-- 페이징 샘플 (삭제 예정) ]] -->


</mapper>